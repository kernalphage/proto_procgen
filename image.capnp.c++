// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: image.capnp

#include "image.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<22> b_fc2e212254bfa8d0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    208, 168, 191,  84,  34,  33,  46, 252,
     12,   0,   0,   0,   4,   0,   0,   0,
     83, 133, 115, 221,  53,  26,  34, 182,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   1,   0,
     32,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  97, 103, 101,  46,  99,  97,
    112, 110, 112,  58, 113, 117, 120,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0, 123,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fc2e212254bfa8d0 = b_fc2e212254bfa8d0.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fc2e212254bfa8d0 = {
  0xfc2e212254bfa8d0, b_fc2e212254bfa8d0.words, 22, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fc2e212254bfa8d0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<87> b_d5c914c3bb0b68f1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    241, 104,  11, 187, 195,  20, 201, 213,
     12,   0,   0,   0,   1,   0,   1,   0,
     83, 133, 115, 221,  53,  26,  34, 182,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  97, 103, 101,  46,  99,  97,
    112, 110, 112,  58,  73, 109,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     21,  22, 255, 121, 133, 106, 159, 245,
      1,   0,   0,   0,  66,   0,   0,   0,
     67, 111, 109, 109,  97, 110, 100,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 111, 114, 116, 110,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21,  22, 255, 121, 133, 106, 159, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5c914c3bb0b68f1 = b_d5c914c3bb0b68f1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d5c914c3bb0b68f1[] = {
  &s_f59f6a8579ff1615,
};
static const uint16_t m_d5c914c3bb0b68f1[] = {3, 0, 1, 2};
static const uint16_t i_d5c914c3bb0b68f1[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d5c914c3bb0b68f1 = {
  0xd5c914c3bb0b68f1, b_d5c914c3bb0b68f1.words, 87, d_d5c914c3bb0b68f1, m_d5c914c3bb0b68f1,
  1, 4, i_d5c914c3bb0b68f1, nullptr, nullptr, { &s_d5c914c3bb0b68f1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_f59f6a8579ff1615 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     21,  22, 255, 121, 133, 106, 159, 245,
     18,   0,   0,   0,   1,   0,   1,   0,
    241, 104,  11, 187, 195,  20, 201, 213,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  97, 103, 101,  46,  99,  97,
    112, 110, 112,  58,  73, 109,  97, 103,
    101,  46,  67, 111, 109, 109,  97, 110,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     15,  53,  84, 218, 100, 224, 114, 138,
      1,   0,   0,   0, 114,   0,   0,   0,
     80, 114, 105, 109, 105, 116, 105, 118,
    101,  84, 121, 112, 101,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    109, 205, 147, 231,   3, 220, 208, 146,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     99, 109, 100,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f59f6a8579ff1615 = b_f59f6a8579ff1615.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f59f6a8579ff1615[] = {
  &s_92d0dc03e793cd6d,
};
static const uint16_t m_f59f6a8579ff1615[] = {0, 1};
static const uint16_t i_f59f6a8579ff1615[] = {0, 1};
const ::capnp::_::RawSchema s_f59f6a8579ff1615 = {
  0xf59f6a8579ff1615, b_f59f6a8579ff1615.words, 49, d_f59f6a8579ff1615, m_f59f6a8579ff1615,
  1, 2, i_f59f6a8579ff1615, nullptr, nullptr, { &s_f59f6a8579ff1615, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<44> b_8a72e064da54350f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15,  53,  84, 218, 100, 224, 114, 138,
     26,   0,   0,   0,   2,   0,   0,   0,
     21,  22, 255, 121, 133, 106, 159, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  97, 103, 101,  46,  99,  97,
    112, 110, 112,  58,  73, 109,  97, 103,
    101,  46,  67, 111, 109, 109,  97, 110,
    100,  46,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  84, 121, 112, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 110, 101,   0,   0,   0,   0,
     99, 105, 114,  99, 108, 101,   0,   0,
     98, 101, 122, 105, 101, 114,   0,   0,
    112, 111, 105, 110, 116,  67, 108, 111,
    117, 100,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 108,   0,   0,   0,   0,
    115, 116, 114, 111, 107, 101,   0,   0, }
};
::capnp::word const* const bp_8a72e064da54350f = b_8a72e064da54350f.words;
#if !CAPNP_LITE
static const uint16_t m_8a72e064da54350f[] = {2, 1, 4, 0, 3, 5};
const ::capnp::_::RawSchema s_8a72e064da54350f = {
  0x8a72e064da54350f, b_8a72e064da54350f.words, 44, nullptr, m_8a72e064da54350f,
  0, 6, nullptr, nullptr, nullptr, { &s_8a72e064da54350f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PrimitiveType_8a72e064da54350f, 8a72e064da54350f);
static const ::capnp::_::AlignedData<35> b_92d0dc03e793cd6d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    109, 205, 147, 231,   3, 220, 208, 146,
     26,   0,   0,   0,   1,   0,   1,   0,
     21,  22, 255, 121, 133, 106, 159, 245,
      3,   0,   7,   0,   1,   0,   2,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  97, 103, 101,  46,  99,  97,
    112, 110, 112,  58,  73, 109,  97, 103,
    101,  46,  67, 111, 109, 109,  97, 110,
    100,  46,  99, 109, 100,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     38,  12, 227, 108, 159, 150,  99, 140,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    173, 154,  52, 252, 176, 100, 245, 188,
     21,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 105, 109, 105, 116, 105, 118,
    101,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 101,  67, 104,  97,
    110, 103, 101,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_92d0dc03e793cd6d = b_92d0dc03e793cd6d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_92d0dc03e793cd6d[] = {
  &s_8c63969f6ce30c26,
  &s_bcf564b0fc349aad,
  &s_f59f6a8579ff1615,
};
static const uint16_t m_92d0dc03e793cd6d[] = {0, 1};
static const uint16_t i_92d0dc03e793cd6d[] = {0, 1};
const ::capnp::_::RawSchema s_92d0dc03e793cd6d = {
  0x92d0dc03e793cd6d, b_92d0dc03e793cd6d.words, 35, d_92d0dc03e793cd6d, m_92d0dc03e793cd6d,
  3, 2, i_92d0dc03e793cd6d, nullptr, nullptr, { &s_92d0dc03e793cd6d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_8c63969f6ce30c26 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38,  12, 227, 108, 159, 150,  99, 140,
     30,   0,   0,   0,   1,   0,   1,   0,
    109, 205, 147, 231,   3, 220, 208, 146,
      3,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  97, 103, 101,  46,  99,  97,
    112, 110, 112,  58,  73, 109,  97, 103,
    101,  46,  67, 111, 109, 109,  97, 110,
    100,  46,  99, 109, 100,  46, 112, 114,
    105, 109, 105, 116, 105, 118, 101,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     15,  53,  84, 218, 100, 224, 114, 138,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8c63969f6ce30c26 = b_8c63969f6ce30c26.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8c63969f6ce30c26[] = {
  &s_8a72e064da54350f,
  &s_92d0dc03e793cd6d,
};
static const uint16_t m_8c63969f6ce30c26[] = {0};
static const uint16_t i_8c63969f6ce30c26[] = {0};
const ::capnp::_::RawSchema s_8c63969f6ce30c26 = {
  0x8c63969f6ce30c26, b_8c63969f6ce30c26.words, 33, d_8c63969f6ce30c26, m_8c63969f6ce30c26,
  2, 1, i_8c63969f6ce30c26, nullptr, nullptr, { &s_8c63969f6ce30c26, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_bcf564b0fc349aad = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    173, 154,  52, 252, 176, 100, 245, 188,
     30,   0,   0,   0,   1,   0,   1,   0,
    109, 205, 147, 231,   3, 220, 208, 146,
      3,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  97, 103, 101,  46,  99,  97,
    112, 110, 112,  58,  73, 109,  97, 103,
    101,  46,  67, 111, 109, 109,  97, 110,
    100,  46,  99, 109, 100,  46, 115, 116,
     97, 116, 101,  67, 104,  97, 110, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bcf564b0fc349aad = b_bcf564b0fc349aad.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bcf564b0fc349aad[] = {
  &s_92d0dc03e793cd6d,
};
static const uint16_t m_bcf564b0fc349aad[] = {0, 1};
static const uint16_t i_bcf564b0fc349aad[] = {0, 1};
const ::capnp::_::RawSchema s_bcf564b0fc349aad = {
  0xbcf564b0fc349aad, b_bcf564b0fc349aad.words, 49, d_bcf564b0fc349aad, m_bcf564b0fc349aad,
  1, 2, i_bcf564b0fc349aad, nullptr, nullptr, { &s_bcf564b0fc349aad, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Image
constexpr uint16_t Image::_capnpPrivate::dataWordSize;
constexpr uint16_t Image::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Image::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Image::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Image::Command
constexpr uint16_t Image::Command::_capnpPrivate::dataWordSize;
constexpr uint16_t Image::Command::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Image::Command::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Image::Command::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Image::Command::Cmd
constexpr uint16_t Image::Command::Cmd::_capnpPrivate::dataWordSize;
constexpr uint16_t Image::Command::Cmd::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Image::Command::Cmd::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Image::Command::Cmd::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Image::Command::Cmd::Primitive
constexpr uint16_t Image::Command::Cmd::Primitive::_capnpPrivate::dataWordSize;
constexpr uint16_t Image::Command::Cmd::Primitive::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Image::Command::Cmd::Primitive::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Image::Command::Cmd::Primitive::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Image::Command::Cmd::StateChange
constexpr uint16_t Image::Command::Cmd::StateChange::_capnpPrivate::dataWordSize;
constexpr uint16_t Image::Command::Cmd::StateChange::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Image::Command::Cmd::StateChange::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Image::Command::Cmd::StateChange::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



